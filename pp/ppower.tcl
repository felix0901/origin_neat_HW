# Read in variables generated by the makefile and echo the same
source make_generated_vars.tcl
source setup.tcl

set power_enable_analysis true
set power_analysis_mode averaged

# Library and path setup done in setup.tcl

echo "================================="
echo "SRC_PATH      = " ${SRC_PATH} "\n"
echo "TOPLEVEL      = " ${TOPLEVEL} "\n"
echo "CLK_PERIOD    = " ${CLK_PERIOD} "\n"
echo "SDC_VERSION   = " ${SDC_VERSION} "\n"
echo "STRIP_PATH    = " ${STRIP_PATH} "\n"
echo "START_TIME    = " ${START_TIME} "\n"
echo "END_TIME      = " ${END_TIME} "\n"
echo "================================="

set CLK_HPERIOD [expr ${CLK_PERIOD}/2.0]


# Read in the synthesized gate level netlist, link resolves the references between modules in the hierarchy
# echo    [format "%s/%s%s" ${sverilog_path} ${TOPLEVEL} ".gate.v"]
# read_verilog    [format "%s/%s%s" ${sverilog_path} ${TOPLEVEL} ".gate.v"]

read_verilog    ${SRC_PATH}/${TOPLEVEL}.gate.v
current_design  ${TOPLEVEL}
link

# read sdc and set transition time or annotate parasitics
read_sdc -version ${SDC_VERSION} ${SRC_PATH}/${TOPLEVEL}.gate.sdc
read_sdf ${SRC_PATH}/${TOPLEVEL}.gate.sdf

if {[expr ${IS_PAR} != 0]} {
    read_parasitics ${SRC_PATH}/${TOPLEVEL}.gate.spef
}

# check, update, and report timing
check_timing
update_timing
report_timing > ${TOPLEVEL}.timing.rpt

# read switching activity 
read_vcd ${VCD_FILE} -strip_path ${STRIP_PATH} -time [list ${START_TIME} ${END_TIME}]
report_switching_activity -list_not_annotated

# check, update, report power
check_power
update_power

report_power > ${TOPLEVEL}.power.summary.rpt
report_power -hierarchy > ${TOPLEVEL}.power.hier.rpt
report_power -net_power -nworst 10 > ${TOPLEVEL}.power.net.rpt
report_clock_gate_savings > ${TOPLEVEL}.power.clockgate.rpt

quit








## Annotate clock information
## I don't know if this is directly read from the gate level sdc or not
##create_clock    clk -period ${CLK_PERIOD}
#
## Specify wire load models for missing parasitics
#complete_net_parasitics -complete_with wlm 
#
## Set some other options and create some reports
## Disable clock gating checks, since PrimeTime doesn't seem very good at catching them
#set timing_disable_clock_gating_checks true
#
## I don't know which of these reports are needed - please uncomment as necessary
#report_timing   > ${TOPLEVEL}.gate.timing.rpt
#report_design   > ${TOPLEVEL}.design.rpt
#report_clock    > misc.rpt
## 
## check_timing -verbos >> ${TOPLEVEL}.gate.timing.rpt
## report_wire_load >> misc.rpt
## 
## report_port >> misc.rpt
## report_net >> misc.rpt
## report_hier > hier.rpt
## report_reference >> misc.rpt
## report_path_group >> misc.rpt
## 
#report_timing -max_paths 100 -delay_type max > ${TOPLEVEL}.gate.timing_setup.rpt
#report_timing -max_paths 100 -delay_type min > ${TOPLEVEL}.gate.timing_hold.rpt
## 
## report_bottleneck > timing_bottleneck.rpt
## report_analysis_coverage > analysis_coverage.rpt
#
## Read VCD and do power analysis
##set power_enable_analysis true
## Set time option if required
## read_vcd -strip_path TB/U1 waveforms.vcd -time {start_time end_time}
#read_vcd ${VCD_FILE} -strip_path ${STRIP_PATH} -time [list ${START_TIME} ${END_TIME}]
##read_vcd ${VCD_FILE} -strip_path ${STRIP_PATH} -time {1 -1}
#
## Generate waveform data (for say peak power, or visualizing)
## create_power_waveforms -output "vcd"
#report_power -hierarchy > ${TOPLEVEL}.gate.power.rpt
#report_power -hierarchy -levels 2 > ${TOPLEVEL}_grouped.gate.power.rpt 

